{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "devcontainer: 'just build all'",
      "type": "shell",
      "command": "direnv",
      "args": [
        "exec",
        ".",
        "just",
        "build",
        "all"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "silent"
      }
    },
    {
      "label": "devcontainer: 'just clean'",
      "type": "shell",
      "command": "direnv",
      "args": [
        "exec",
        ".",
        "just",
        "clean"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "silent"
      }
    },
    {
      "label": "devcontainer: 'just build clean'",
      "type": "shell",
      "dependsOn": [
        "devcontainer: 'just clean'",
        "devcontainer: 'just build all'"
      ],
      "dependsOrder": "sequence"
    },
    {
      "label": "Run 'just'",
      "type": "shell",
      "dependsOn": [
        "Task A - Recipe Selection",
        "Task B - Target Selection"
      ],
      "dependsOrder": "sequence",
      "problemMatcher": [],
      "presentation": {
        "reveal": "always"
      }
    },
    {
      "label": "Task A - Recipe Selection",
      "type": "shell",
      "command": "./scripts/taskA_wrapper.sh",
      "args": [
        "${input:recipeSelection}"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always"
      }
    },
    {
      "label": "Task B - Target Selection",
      "type": "shell",
      "command": "./scripts/taskB_wrapper.sh",
      "args": [
        "${input:targetSelection}"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always"
      }
    }
  ],
  "inputs": [
    {
      "id": "recipeSelection",
      "type": "pickString",
      "description": "Select a recipe:",
      "options": [
        "clean",
        "build",
        "clean-all",
        "clean-nix",
        "default",
        "init",
        "list",
        "test",
        "update",
        "upgrade-sdk"
      ]
    },
    {
      "id": "targetSelection",
      "type": "command",
      "command": "shellCommand.execute",
      "args": {
        "command": "./scripts/fetch_targets.sh",
        "cwd": "${workspaceFolder}",
        "warnOnStderr": false
      }
    }
  ]
}
